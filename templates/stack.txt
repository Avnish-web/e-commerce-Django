package in.DataStructure;

// Stack using array
public class Stack {
    int size;
    int top;
    int[] stackArray;

    // Constructor
    public Stack(int size) {
        this.size = size;
        this.top = -1;
        this.stackArray = new int[this.size];
    }

    // Push method
    public void push(int value) {
        if (this.top == this.size - 1) {
            System.out.println("Overflow");
            return;
        } else {
            this.top += 1;
            this.stackArray[this.top] = value;
        }
    }

    // Pop method
    public void pop() {
        if (this.top == -1) {
            System.out.println("Empty");
            return;
        } else {
            int data = this.stackArray[this.top];
            this.top -= 1;
            System.out.println("Popped: " + data);
        }
    }

    // Traverse method
    public void traverse() {
        if (this.top == -1) {
            System.out.println("Stack is empty");
            return;
        }
        int i = 0;
        while (i <= this.top) {
            System.out.print(this.stackArray[i] + " ");
            i++;
        }
        System.out.println();
    }
    
    public void print() {
    	int i = this.top;
        while (i >=0) {
            System.out.println(this.stackArray[i]);
            i--;
            if(i>=0) {
                System.out.println("|");
            }
            
        }
        System.out.println();
    	
    }

    // Main method for testing
    public static void main(String[] args) {
        Stack s = new Stack(5);
        s.push(10);
        s.push(20);
        s.push(30);
        s.print();
        s.traverse();  // Output: 10 20 30
        s.pop();       // Output: Popped: 30
        s.traverse();  // Output: 10 20
    }
}